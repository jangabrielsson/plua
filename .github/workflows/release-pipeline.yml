name: Release Pipeline

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual trigger

jobs:
  # Job 1: Build executables
  build-executables:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
          - os: windows-latest
            platform: windows
            arch: x86_64
          - os: macos-latest
            platform: macos
            arch: x86_64
          - os: macos-14
            platform: macos
            arch: arm64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[build]
        
    - name: Install platform-specific dependencies
      run: |
        # Install platform-specific requirements for Nuitka
        if [ "${{ matrix.platform }}" = "linux" ]; then
          sudo apt-get update
          sudo apt-get install -y gcc g++ ccache
        elif [ "${{ matrix.platform }}" = "macos" ]; then
          # macOS should have Xcode command line tools available
          echo "Using macOS system compiler"
        elif [ "${{ matrix.platform }}" = "windows" ]; then
          # Windows should use MSVC
          echo "Using Windows MSVC compiler"
        fi
      shell: bash
    
    - name: Build with Nuitka
      run: |
        cd scripts
        echo "Building for platform: ${{ matrix.platform }}-${{ matrix.arch }}"
        echo "Python version: $(python --version)"
        echo "Nuitka version: $(python -m nuitka --version)"
        echo "Current directory: $(pwd)"
        echo "Files in scripts directory:"
        ls -la
        echo "Checking if build_main_standalone.py exists:"
        ls -la build_main_standalone.py
        python build_nuitka.py
      shell: bash
    
    - name: Prepare release artifacts
      shell: bash
      run: |
        mkdir -p release-artifacts
        
        if [ "${{ matrix.platform }}" = "windows" ]; then
          EXT=".exe"
        else
          EXT=""
        fi
        
        # Package Nuitka build from correct output locations
        if [ "${{ matrix.platform }}" = "macos" ]; then
          # macOS creates .app bundles
          if [ -d "scripts/dist/build_main_standalone.app" ]; then
            # Create a zip file of the app bundle for macOS
            cd scripts/dist
            zip -r "../../release-artifacts/plua-${{ matrix.platform }}-${{ matrix.arch }}.app.zip" "build_main_standalone.app"
            cd ../..
            # Also extract just the executable for convenience
            if [ -f "scripts/dist/build_main_standalone.app/Contents/MacOS/plua" ]; then
              cp "scripts/dist/build_main_standalone.app/Contents/MacOS/plua" "release-artifacts/plua-${{ matrix.platform }}-${{ matrix.arch }}${EXT}"
            fi
          fi
        else
          # Linux/Windows create single files
          if [ -f "scripts/dist/plua${EXT}" ]; then
            cp "scripts/dist/plua${EXT}" "release-artifacts/plua-${{ matrix.platform }}-${{ matrix.arch }}${EXT}"
          fi
        fi
        
        ls -la release-artifacts/
    
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: release-artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 2: Update release with summary (runs after build completes)
  update-release:
    needs: [build-executables]
    runs-on: ubuntu-latest
    steps:
    - name: Update release description
      uses: softprops/action-gh-release@v1
      with:
        append_body: true
        body: |
          
          ## ðŸ“¦ Installation Options
          
          ### Python Package (Recommended)
          ```bash
          pip install plua==${{ github.ref_name }}
          ```
          
          > **Note**: PyPI package is published automatically by a separate workflow.
          
          ### Standalone Executables
          Download the appropriate executable for your platform:
          - **Linux**: `plua-linux-x86_64`
          - **Windows**: `plua-windows-x86_64.exe` 
          - **macOS Intel**: `plua-macos-x86_64` or `plua-macos-x86_64.app.zip` (app bundle)
          - **macOS Apple Silicon**: `plua-macos-arm64` or `plua-macos-arm64.app.zip` (app bundle)
          
          All executables are optimized builds compiled with Nuitka.
          
          ### Usage
          ```bash
          # Python package
          plua script.lua
          
          # Standalone executable
          ./plua-linux-x86_64 script.lua
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
